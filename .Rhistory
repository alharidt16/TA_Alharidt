library(readxl)
DATA_SRT_KOTA <- read_excel("D:/OneDrive - mhs.unsyiah.ac.id/Semester 7/Draft TA/Data/DATA SRT KOTA.xlsx")
Data_TA = DATA_SRT_KOTA
view(Data_TA)
View(Data_TA)
summary(Data_TA)
str(Data_TA)
Data_TA(,-1)=as.factor(Data_TA)
Data_TA(,-1)
Data_TA(-1,)
Data_TA
library(readxl)
DATA_SRT_KOTA <- read_excel("D:/OneDrive - mhs.unsyiah.ac.id/Semester 7/Draft TA/Data/DATA TA.xlsx")
library(readxl)
DATA TA <- read_excel("D:/OneDrive - mhs.unsyiah.ac.id/Semester 7/Draft TA/Data/DATA TA.xlsx")
DATA_TA <- read_excel("D:/OneDrive - mhs.unsyiah.ac.id/Semester 7/Draft TA/Data/DATA TA.xlsx")
view(Data_TA)
View(Data_TA)
View(DATA_TA)
summary(DATA_TA)
str(DATA_TA)
# Convert character variables to categorical variables
DATA_TA$`Jumlah Anggota Rumah Tangga (ART)` <- as.factor(DATA_TA$`Jumlah Anggota Rumah Tangga (ART)`)
str(DATA_TA)
DATA_TA$`Jumlah Anggota Rumah Tangga (ART)` <- as.factor(DATA_TA$`Jumlah Anggota Rumah Tangga (ART)`)
DATA_TA$`Jumlah Keluarga` <- as.factor(DATA_TA$`Jumlah Keluarga`)
DATA_TA$`Status bangunan tempat tinggal` <- as.factor(DATA_TA$`Status bangunan tempat tinggal`)
DATA_TA$`Status lahan tempat tinggal` <- as.factor(DATA_TA$`Status lahan tempat tinggal`)
#DATA_TA$`Luas lantai` <- as.factor(DATA_TA$`Luas lantai`)
DATA_TA$`Jenis lantai terluas` <- as.factor(DATA_TA$`Jenis lantai terluas`)
DATA_TA$`Jenis dinding terluas` <- as.factor(DATA_TA$`Jenis dinding terluas`)
DATA_TA$`Kondisi dinding` <- as.factor(DATA_TA$`Kondisi dinding`)
DATA_TA$`Jenis atap terluas` <- as.factor(DATA_TA$`Jenis atap terluas`)
DATA_TA$`Kondisi atap` <- as.factor(DATA_TA$`Kondisi atap`)
DATA_TA$`Jumlah kamar tidur` <- as.factor(DATA_TA$`Jumlah kamar tidur`)
DATA_TA$`Sumber air minum` <- as.factor(DATA_TA$`Sumber air minum`)
DATA_TA$`Cara memperoleh air minum` <- as.factor(DATA_TA$`Sumber penerangan utama`)
DATA_TA$`Sumber penerangan utama` <- as.factor(DATA_TA$`Sumber penerangan utama`)
DATA_TA$`Daya listrik terpasang` <- as.factor(DATA_TA$`Daya listrik terpasang`)
DATA_TA$`Bahan bakar untuk memasak` <- as.factor(DATA_TA$`Bahan bakar untuk memasak`)
DATA_TA$`Penggunaan fasilitas BAB` <- as.factor(DATA_TA$`Penggunaan fasilitas BAB`)
DATA_TA$`Jenis kloset` <- as.factor(DATA_TA$`Jenis kloset`)
DATA_TA$`Tempat pembuangan akhir tinja` <- as.factor(DATA_TA$`Tempat pembuangan akhir tinja`)
DATA_TA$`Tabung gas 5,5kg atau lebih` <- as.factor(DATA_TA$`Tabung gas 5,5kg atau lebih`)
DATA_TA$`Lemari es/kulkas` <- as.factor(DATA_TA$`Lemari es/kulkas`)
DATA_TA$AC <- as.factor(DATA_TA$AC)
DATA_TA$`Pemanas air` <- as.factor(DATA_TA$`Pemanas air`)
DATA_TA$Televisi <- as.factor(DATA_TA$Televisi)
DATA_TA$`Emas/perhiasan/tabungan` <- as.factor(DATA_TA$`Emas/perhiasan/tabungan`)
DATA_TA$Komputer <- as.factor(DATA_TA$Komputer)
DATA_TA$Sepeda <- as.factor(DATA_TA$Sepeda)
DATA_TA$`Sepeda motor` <- as.factor(DATA_TA$`Sepeda motor`)
DATA_TA$Mobil <- as.factor(DATA_TA$Mobil)
DATA_TA$Perahu <- as.factor(DATA_TA$Perahu)
DATA_TA$`Motor tempel` <- as.factor(DATA_TA$`Motor tempel`)
DATA_TA$`Perahu motor` <- as.factor(DATA_TA$`Perahu motor`)
DATA_TA$Kapal <- as.factor(DATA_TA$Kapal)
DATA_TA$`Aset lahan` <- as.factor(DATA_TA$`Aset lahan`)
#DATA_TA$`Luas lahan` <- as.factor(DATA_TA$`Luas lahan`)
DATA_TA$`Rumah di tempat lain` <- as.factor(DATA_TA$`Rumah di tempat lain`)
DATA_TA$`ART memiliki usaha sendiri/bersama` <- as.factor(DATA_TA$`ART memiliki usaha sendiri/bersama`)
DATA_TA$`Status Kesejahteraan` <- as.factor(DATA_TA$`Status Kesejahteraan`)
str(DATA_TA)
summary(DATA_TA)
cls
clear
summary(DATA_TA)
#Memanggil Data
data.ir=read.csv("DATASET02.csv",header = TRUE)
#Memanggil Data
data.ir=read.csv(file = "DATASET02.csv",header = TRUE,sep=";")
#Memanggil Data
data.ir=read.delim("clipboard")
data.ir
#Melihat struktur data
str(data.ir)
#Melihat summary data
summary(data.ir)
#Mean Difference
MD = with(data.ir,Me-Mc)
MD
#Ukuran Varian Mean Difference
VarMD = with(data.ir,Se*Se/Ne + Sc*Sc/Nc)
VarMD
#Nilai bobot
weight = 1/VarMD
weight
#Menghitung estimator invers varians dan varians
round(weighted.mean(MD,weight),4)
round(1/sum(weight),4)
#Analisa hasil fungsi metacont
mc = metacont(Ne,Me,Se,Nc,Mc,Sc,studlab = paste(author),data=data.ir)
library(meta)
library(meta)
#Mean Difference
MD = with(data.ir,Me-Mc)
MD
#Ukuran Varian Mean Difference
VarMD = with(data.ir,Se*Se/Ne + Sc*Sc/Nc)
VarMD
#Nilai bobot
weight = 1/VarMD
weight
#Menghitung estimator invers varians dan varians
round(weighted.mean(MD,weight),4)
round(1/sum(weight),4)
#Analisa hasil fungsi metacont
mc = metacont(Ne,Me,Se,Nc,Mc,Sc,studlab = paste(author),data=data.ir)
summary(mc)
#Forest Plot
forest(mc,comb.random=FALSE,xlab="Difference in mean response (intervention-control)units: maximum%fall in FEV1", xlim=c(-50,10),xlab.pos=-20,smlab.pos=-20)
rm(data.ir)
rm(mc)
rm(MD)
rm(VarMD)
rm(weight)
library(spdep)
library(maptools)
library(rgdal)
kalteng=rgdal::readOGR("Laporan/kalteng/batas_kabupaten_kalteng_620020181107021746.shp")
library (spdep)
library(maptools)
library(rgdal)
library(rgeos)
library(spgwr)
Aceh= rgdal::readOGR("C:/Users/Alharidt/Downloads/LAB 2/Aceh1/Aceh1.shp")
summary(Aceh)
coords= coordinates(Aceh)
coords
plot(Aceh, axes=TRUE, border="black", col=c
("lavenderblush3","darkseagreen3","darkseagreen4","burlywood2","burlywood","burlywood3","cornsilk","cornsilk2","cornsilk3","cadetblue3",
"cadetblue","lightblue3","lightblue","lemonchiffon3","lemonchiffon2","lightcyan2"),
main="Peta Wilayah Provinsi Aceh ")
text (coords,labels=Aceh$KABKOT,cex = 0.6,col = "black",font=2)
text (coords,labels=Aceh$KABKOT,cex = 0.6,col = "black",font=2)
library(spgwr)
library(rgdal)
library(rgeos)
text(coords,labels=Aceh$KABKOT,cex = 0.6,col = "black",font=2)
text(coords,labels=Aceh$KABKOT,cex = 0.6,col ="black",font=2)
library (spdep)
library(maptools)
library(rgdal)
library(rgeos)
library(spgwr)
library (spdep)
library(maptools)
library(rgdal)
library(rgeos)
library(spgwr)
Jateng_nona= rgdal::readOGR(C:/Users/Alharidt/Downloads/Jawa Tengah shp/Jawa Tengah shp/Jawa_Tengah_ADMIN_BPS.shp")
Jateng_nona= rgdal::readOGR(C:/Users/Alharidt/Downloads/Jawa Tengah shp/Jawa Tengah shp/Jawa_Tengah_ADMIN_BPS.shp")
Jateng_nona= rgdal::readOGR(C:\\Users\\Alharidt\\Downloads\\Jawa Tengah shp\\Jawa Tengah shp\\Jawa_Tengah_ADMIN_BPS.shp")
Jateng_nona= rgdal::readOGR(C:\Users\Alharidt\Downloads\Jawa Tengah shp\Jawa Tengah shp\Jawa_Tengah_ADMIN_BPS.shp")
Jateng_nona= rgdal::readOGR("C:\Users\Alharidt\Downloads\Jawa Tengah shp\Jawa Tengah shp\Jawa_Tengah_ADMIN_BPS.shp")
Jateng_nona= rgdal::readOGR("C:/Users/Alharidt/Downloads/Jawa Tengah shp/Jawa Tengah shp/Jawa_Tengah_ADMIN_BPS.shp")
summary(Aceh)
summary(Jateng_nona)
summary(Jateng_nona)
coords= coordinates(Jateng_nona)
coords
plot(Jateng_nona, axes=TRUE, border="black", col=c
("lavenderblush3","darkseagreen3","darkseagreen4","burlywood2","burlywood","burlywood3","cornsilk","cornsilk2","cornsilk3","cadetblue3",
"cadetblue","lightblue3","lightblue","lemonchiffon3","lemonchiffon2","lightcyan2"),
main="Peta Wilayah Provinsi Jawa Tengah ")
text (coords,labels=Jateng_nona$Kabupaten,cex = 0.6,col = "black",font=2)
text (coords,labels=Jateng_nona$Kabupaten,cex = 0.6,col = "black",font=2)
text (coords,labels=Jateng_nona$Kabupaten,cex = 0.6,col ="black",font=2)
library (spdep)
library(maptools)
library(rgdal)
library(rgeos)
library(spgwr)
Jateng_nona= rgdal::readOGR("C:/Users/Alharidt/Downloads/Jawa Tengah shp/Jawa Tengah shp/Jawa_Tengah_ADMIN_BPS.shp")
summary(Jateng_nona)
coords= coordinates(Jateng_nona)
coords
plot(Jateng_nona, axes=TRUE, border="black", col=c
("lavenderblush3","darkseagreen3","darkseagreen4","burlywood2","burlywood","burlywood3","cornsilk","cornsilk2","cornsilk3","cadetblue3",
"cadetblue","lightblue3","lightblue","lemonchiffon3","lemonchiffon2","lightcyan2"),
main="Peta Wilayah Provinsi Jawa Tengah ")
text (coords,labels=Jateng_nona$Kabupaten,cex = 0.6,col ="black",font=2)
install.packages("languageserver")
q()
version
system("java -version")
install.packages("tidyverse")
install.packages("rmarkdown")
install.packages("httr")
install.packages("shinydashboard")
install.packages('leaflet')
install.packages("devtools")
install.packages("arrow")
install.packages("sf")
library(devtools)
devtools::install_github("harryprince/geospark")
install.packages(c("sparklyr"))
packageVersion("sparklyr")
library(sparklyr)
library(sparklyr)
spark_available_versions()
spark_install(version = "2.4.8")
spark_available_versions()
spark_install(version = "2.4.8")
spark_available_versions()
suppressPackageStartupMessages(library("dplyr"))
#library(nycflights13)
#library(nycflights13)
#library(Lahman)
spark <- spark_connect(master = "local")
spark_disconnect(spark)
spark_disconnect(spark)
spark_install(version = "2.4.8")
install.packages("C:/Users/Alharidt/Downloads/spark-2.4.8-bin-hadoop2.7.tgz", repos = NULL, type = .Platform$pkgType)
install.packages("C:/Users/Alharidt/Downloads/spark-2.4.8-bin-hadoop2.7.tar.gz", repos = NULL, type = "source")
spark_available_versions()
spark_install(version = "2.4.8")
version
system("java -version")
install.packages("tidyverse")
install.packages("rmarkdown")
install.packages("httr")
install.packages("shinydashboard")
install.packages('leaflet')
install.packages("devtools")
install.packages("arrow")
install.packages("sf")
library(devtools)
devtools::install_github("harryprince/geospark")
install.packages("mapview")
install.packages(c("sparklyr"))
packageVersion("sparklyr")
library(sparklyr)
library(sparklyr)
spark_available_versions()
spark_install(version = "2.4.8")
spark_install(version = "2.4.8")
spark_install(version = "2.4.8")
spark_install(version = "2.4.8")
system("java -version")
install.packages("tidyverse")
install.packages("rmarkdown")
install.packages("httr")
install.packages("shinydashboard")
install.packages('leaflet')
install.packages("devtools")
install.packages("arrow")
install.packages("sf")
library(devtools)
devtools::install_github("harryprince/geospark")
install.packages("mapview")
install.packages(c("sparklyr"))
packageVersion("sparklyr")
library(sparklyr)
library(sparklyr)
spark_available_versions()
spark_install(version = "2.4.8")
spark_available_versions()
spark_install(version = "2.4.8")
ggplot(
delay,aes(dist,delay))+
geom_point(aes(size=count),alpha=1/2)+ geom_smooth()+ scale_size_area(max_size=2)
initialDf %>%
group_by(date_format(lpep_pickup_datetime,'E')) %>%
count()
# plot cluster membership
ml_predict(kmeans_model) %>%
collect() %>%
ggplot(aes(Petal_Length, Petal_Width)) +
geom_point(aes(Petal_Width, Petal_Length, col = factor(prediction + 1)),
size = 2, alpha = 0.5) +
geom_point(data = kmeans_model$centers, aes(Petal_Width, Petal_Length),
col = scales::muted(c("red", "green", "blue")),
pch = 'x', size = 12) +
scale_color_discrete(name = "Predicted Cluster",
labels = paste("Cluster", 1:3)) +
labs(
x = "Petal Length",
y = "Petal Width",
title = "K-Means Clustering",
subtitle = "Use Spark.ML to predict cluster membership with the iris dataset."
)
# summarize the model
summary(fit)
gf_shortest_paths(graph, 33) %>%
filter(size(distances) > 0) %>%
mutate(distance = explode(map_values(distances))) %>%
select(id, distance)
# CURRENTLY ONLY spark 2.3 is supported for this part.
# install if you do not already have it
spark_install(version = "2.3.3")
install.packages("~/spark-2.4.8-bin-hadoop2.7/spark-2.4.8-bin-hadoop2.7.tar", repos = NULL)
install.packages("~/spark-2.4.8-bin-hadoop2.7/spark-2.4.8-bin-hadoop2.7.tar.gz", repos = NULL, type = "source")
spark_available_versions()
library(sparklyr)
spark_available_versions()
spark_install(version = "2.4.8")
library(sparklyr)
spark_available_versions()
spark_available_versions()
spark_install(version = "2.4.8")
library(sparklyr)
spark_available_versions()
spark_install(version = "2.4.8")
spark_available_versions()
suppressPackageStartupMessages(library("dplyr"))
spark <- spark_connect(master = "local")
spark_install(version = "2.4.8")
library(sparklyr)
spark_available_versions()
spark_install(version = "2.4.8")
spark_install(version = "2.4.8")
utils:::menuInstallPkgs()
library(Kmedians)
q()
setwd("C:/Users/Alharidt/Documents/GitHub/TA_Alharidt")
sampel2 <- read_excel("sampel2.xlsx", sheet = "Sheet2")
library(readxl)
library(factoextra)
library(cluster)
sampel2 <- read_excel("sampel2.xlsx", sheet = "Sheet2")
k_medoids_sample=pam(sampel2, 5, metric = "manhattan", stand = FALSE)
k_medoids_sample
#SAMPLE
Data_gabung_filter_2 <- read_excel("Data_gabung _filter 2.xlsx")
DATA_TA <- read.csv("Data_gabung _filter 2.csv")
#Data tanpa duplikat
DATA_TA<- unique(DATA_TA)
MYDATA=DATA_TA
DATA_TA=DATA_TA[,c(-1,-2,-38)]
str(DATA_TA)
sampel2 <- read_excel("sampel2.xlsx", sheet = "Sheet2")
k_medoids_sample=pam(sampel2, 5, metric = "manhattan", stand = FALSE)
DATA_TA <- read.csv("Data_gabung _filter 2.csv")
#Data tanpa duplikat
DATA_TA<- unique(DATA_TA)
MYDATA=DATA_TA
DATA_TA=DATA_TA[,c(-1,-2,-38)]
save.image("~/GitHub/TA_Alharidt/.RData")
library(factoextra)
library(cluster)
k_medoids=pam(DATA_TA, 5, metric = "manhattan", stand = FALSE)
k_medoids
save.image("~/GitHub/TA_Alharidt/TA.RData")
k_medoids$clustering
MYDATA$cluster_kmedian<-k_medoids$clustering
View(MYDATA)
#eksplor ke excel
library(writexl)
write_xlsx(MYDATA, path="DATA_kmedoids.xlsx")
k_medoids
k_medoids$medoids
kmodes(DATA_TA, 5, iter.max = 10, weighted = FALSE, fast = TRUE)
library(kmodR)
kmodes(DATA_TA, 5, iter.max = 10, weighted = FALSE, fast = TRUE)
library(klaR)
kmodes(DATA_TA, 5, iter.max = 10, weighted = FALSE, fast = TRUE)
k_modes=kmodes(DATA_TA, 5, iter.max = 10, weighted = TRUE, fast = TRUE)
k_modes=kmodes(DATA_TA, 5, iter.max = 10, weighted = TRUE, fast = TRUE)
k_modes=kmodes(DATA_TA, 5, iter.max = 10, weighted = FALSE, fast = TRUE)
k_modes$cluster
k_modes$withindiff
k_modes$modes
k_modes$cluster
View(MYDATA)
library(readxl)
library(factoextra)
library(cluster)
DATA_TA <- read.csv("Data_gabung _filter 2.csv")
#Data tanpa duplikat
DATA_TA<- unique(DATA_TA)
MYDATA=DATA_TA
DATA_TA=DATA_TA[,c(-1,-2,-38)]
str(DATA_TA)
MYDATA$cluster_kmedoids<-k_medoids$clustering
MYDATA$cluster_kmodes<-k_modes$cluster
#eksplor ke excel
library(writexl)
write_xlsx(MYDATA, path="MYDATA.xlsx")
k_modes
k_modes$cluster
library(klaR)
k_modes=kmodes(DATA_TA, 5, iter.max = 10, weighted = FALSE, fast = TRUE)
k_modes$cluster
k_medoids$clustering
k_medoids$clustering
MYDATA
library(readxl)
library(factoextra)
library(cluster)
library(klaR)
DATA_TA <- read.csv("Dataclean.csv")
DATA_TA
#Data tanpa duplikat
DATA_TA<- unique(DATA_TA)
MYDATA=DATA_TA
DATA_TA=DATA_TA[,c("X1","X15","X10","X13","X4","X14","X19","X11","X16","X5","X26")]
str(DATA_TA)
k_modes=kmodes(DATA_TA, 5, iter.max = 100, weighted = FALSE, fast = TRUE)
k_modes$cluster
MYDATA$cluster_kmodes<-k_modes$cluster
View(MYDATA)
library(readxl)
library(factoextra)
library(cluster)
library(klaR)
DATA_TA <- read.csv("testing.csv")
DATA_TA
DATA_TA <- read.csv("testing.csv")
DATA_TA
str(DATA_TA)
#Kmedoids
k_medoids=pam(DATA_TA, 5, metric = "manhattan", stand = FALSE)
#Kmedoids
k_medoids=pam(DATA_TA, 5, metric = "manhattan", stand = TRUE)
# Convert the data set to a matrix
data_matrix <- as.matrix(DATA_TA)
# Print the matrix
print(data_matrix)
# Define the Manhattan distance
dist_matrix <- dist(data_matrix, method = "manhattan")
